name: Deploy dev
on:
  push:
    branches:
      - feat/implement-ci
jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: set up Nodejs v20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: nrwl/nx-set-shas@v4

      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-node-20-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-20-cache-

      - name: Install dependencies
        run: npm install

      # - name: Lint
      #   run: npx nx affected --target=lint --parallel=3

      # - name: Test
      #   run: npx nx affected --target=test -- parallel=3
    
      - name: Get affected apps
        id: affected
        run: echo "affected=$(npx nx show projects --affected)" >> $GITHUB_OUTPUT

  docker:
    runs-on: ubuntu-latest
    needs: ci
    strategy:
      matrix:
        app: ${{ fromJson(needs.ci.outputs.affected) }}
    steps:
      - name: Checkout code 
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/${{ matrix.app }}/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}:${{ github.sha }}
            ghcr.io/${{ github.repository_owner }}/${{ matrix.app }}:latest
          cache-from: type=registry,ref=user/app:buildcache
          cache-to: type=registry,ref=user/app:buildcache,mode=max
